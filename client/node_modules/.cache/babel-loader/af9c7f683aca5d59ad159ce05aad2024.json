{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\afaca\\\\Documents\\\\GitHub\\\\BLJ-Projekt\\\\client\\\\src\\\\components\\\\BuchenControler.js\";\nimport \"../index.css\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BuchenControler = () => {\n  const openButton = document.getElementById('openPopup');\n  const closeButton = document.getElementById('closePopup');\n  const popUp = document.getElementById('popUp-Container');\n  openButton.addEventListener('click', () => {\n    popUp.classList.add('show');\n  });\n  closeButton.addEventListener('click', () => {\n    popUp.classList.remove('show');\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = BuchenControler;\nexport default BuchenControler;\n/*\r\n\r\nconst CustomPopup = (props) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const closeHandler = (e) => {\r\n    setShow(false);\r\n    props.onClose(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setShow(props.show);\r\n  }, [props.show]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        visibility: show ? \"visible\" : \"hidden\"\r\n      }}\r\n      className=\"overlay\"\r\n    >\r\n      <div>\r\n        <h2>{props.title}</h2>\r\n        <span  onClick={closeHandler}>\r\n          &times;\r\n        </span>\r\n        <div >{props.children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomPopup.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  show: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\nexport default CustomPopup;*/\n\nvar _c;\n\n$RefreshReg$(_c, \"BuchenControler\");","map":{"version":3,"sources":["C:/Users/afaca/Documents/GitHub/BLJ-Projekt/client/src/components/BuchenControler.js"],"names":["React","useState","useEffect","BuchenControler","openButton","document","getElementById","closeButton","popUp","addEventListener","classList","add","remove"],"mappings":";AACA,OAAO,cAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;AAGA,MAAMC,eAAe,GAAG,MAAM;AAC5B,QAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAnB;AACA,QAAMC,WAAW,GAAGF,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAApB;AACA,QAAME,KAAK,GAAGH,QAAQ,CAACC,cAAT,CAAwB,iBAAxB,CAAd;AAEAF,EAAAA,UAAU,CAACK,gBAAX,CAA4B,OAA5B,EAAqC,MAAM;AACxCD,IAAAA,KAAK,CAACE,SAAN,CAAgBC,GAAhB,CAAoB,MAApB;AACF,GAFD;AAIAJ,EAAAA,WAAW,CAACE,gBAAZ,CAA6B,OAA7B,EAAsC,MAAM;AAC1CD,IAAAA,KAAK,CAACE,SAAN,CAAgBE,MAAhB,CAAuB,MAAvB;AACD,GAFD;AAIA,sBACE;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAhBD;;KAAMT,e;AAmBN,eAAeA,eAAf;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport \"../index.css\"\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nconst BuchenControler = () => {\r\n  const openButton = document.getElementById('openPopup')\r\n  const closeButton = document.getElementById('closePopup')\r\n  const popUp = document.getElementById('popUp-Container')\r\n\r\n  openButton.addEventListener('click', () => {\r\n     popUp.classList.add('show')\r\n  })\r\n\r\n  closeButton.addEventListener('click', () => {\r\n    popUp.classList.remove('show')\r\n  })\r\n\r\n  return (\r\n    <div></div>\r\n  )\r\n}\r\n\r\n\r\nexport default BuchenControler \r\n  \r\n\r\n\r\n/*\r\n\r\nconst CustomPopup = (props) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const closeHandler = (e) => {\r\n    setShow(false);\r\n    props.onClose(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setShow(props.show);\r\n  }, [props.show]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        visibility: show ? \"visible\" : \"hidden\"\r\n      }}\r\n      className=\"overlay\"\r\n    >\r\n      <div>\r\n        <h2>{props.title}</h2>\r\n        <span  onClick={closeHandler}>\r\n          &times;\r\n        </span>\r\n        <div >{props.children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomPopup.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  show: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\nexport default CustomPopup;*/"]},"metadata":{},"sourceType":"module"}