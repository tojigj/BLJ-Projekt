{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\afaca\\\\Documents\\\\GitHub\\\\BLJ-Projekt\\\\client\\\\src\\\\components\\\\BuchenControler.js\";\nimport \"../index.css\";\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class BuchenControler extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      zimmername: props.zimmername,\n      standort: props.standort,\n      stockwerk: props.stockwerk,\n      maxP: props.maxP\n    };\n  }\n\n  render() {\n    /*#__PURE__*/\n    _jsxDEV(\"button\", {\n      id: \"open\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }, this);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buchenStyle\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buchen-main\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"closePopup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n/*\r\n\r\nconst CustomPopup = (props) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const closeHandler = (e) => {\r\n    setShow(false);\r\n    props.onClose(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setShow(props.show);\r\n  }, [props.show]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        visibility: show ? \"visible\" : \"hidden\"\r\n      }}\r\n      className=\"overlay\"\r\n    >\r\n      <div>\r\n        <h2>{props.title}</h2>\r\n        <span  onClick={closeHandler}>\r\n          &times;\r\n        </span>\r\n        <div >{props.children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomPopup.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  show: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\nexport default CustomPopup;*/","map":{"version":3,"sources":["C:/Users/afaca/Documents/GitHub/BLJ-Projekt/client/src/components/BuchenControler.js"],"names":["React","useState","useEffect","BuchenControler","Component","constructor","props","state","zimmername","standort","stockwerk","maxP","render"],"mappings":";AACA,OAAO,cAAP;AACA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;AAGA,eAAe,MAAMC,eAAN,SAA8BH,KAAK,CAACI,SAApC,CAA8C;AAE3DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAEF,KAAK,CAACE,UADP;AAEXC,MAAAA,QAAQ,EAAEH,KAAK,CAACG,QAFL;AAGXC,MAAAA,SAAS,EAAEJ,KAAK,CAACI,SAHN;AAIXC,MAAAA,IAAI,EAAEL,KAAK,CAACK;AAJD,KAAb;AAMD;;AAEDC,EAAAA,MAAM,GAAG;AACP;AAAA;AAAQ,MAAA,EAAE,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA;;AACA,wBACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,eAII;AAAQ,QAAA,EAAE,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAtB0D;AA2B7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport \"../index.css\"\r\nimport React, {useState, useEffect} from 'react'\r\n\r\n\r\nexport default class BuchenControler extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      zimmername: props.zimmername,\r\n      standort: props.standort,\r\n      stockwerk: props.stockwerk,\r\n      maxP: props.maxP\r\n    };\r\n  }\r\n\r\n  render() {\r\n    <button id=\"open\"></button>\r\n    return (\r\n      <div className=\"buchenStyle\">\r\n        <div className=\"buchen-main\">\r\n\r\n          </div>\r\n          <button id=\"closePopup\"></button>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n/*\r\n\r\nconst CustomPopup = (props) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const closeHandler = (e) => {\r\n    setShow(false);\r\n    props.onClose(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setShow(props.show);\r\n  }, [props.show]);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        visibility: show ? \"visible\" : \"hidden\"\r\n      }}\r\n      className=\"overlay\"\r\n    >\r\n      <div>\r\n        <h2>{props.title}</h2>\r\n        <span  onClick={closeHandler}>\r\n          &times;\r\n        </span>\r\n        <div >{props.children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nCustomPopup.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  show: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\nexport default CustomPopup;*/"]},"metadata":{},"sourceType":"module"}