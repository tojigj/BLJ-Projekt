{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\afaca\\\\Documents\\\\GitHub\\\\BLJ-Projekt\\\\client\\\\src\\\\components\\\\home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Section from \"./section\";\nimport Zimmer from \"./requirements/zimmer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst port = 5001;\n\nconst Home = () => {\n  _s();\n\n  const [filteredData, setFilteredData] = useState([]);\n  const [sitzungsZimmer, setSitzungsZimmer] = useState([]);\n  const [shownData, setShownData] = useState([]);\n  let filters = [];\n  useEffect(() => {\n    axios.get(`http://localhost:${port}/sitzungszimmer/`).then(response => {\n      setSitzungsZimmer(response.data);\n      setFilteredData(response.data);\n    });\n  }, []);\n\n  const handleFilterPersonen = anzPersonen => {\n    setShownData(filteredData);\n    let filteredPersonen;\n\n    if (!anzPersonen) {\n      filteredPersonen = shownData;\n      setFilteredData(filteredPersonen);\n      if (filters.includes(\"standort\")) filters -= \"person\";\n      return;\n    } else {\n      filteredPersonen = filteredData.filter(item => {\n        return item.maxPersonen >= anzPersonen;\n      });\n    }\n\n    filters += \"person\";\n    setFilteredData(filteredPersonen);\n  };\n\n  const generateStockwerkData = () => {\n    return [...new Set(sitzungsZimmer.map(item => item.stockwerk))];\n  };\n\n  const handleFilterStockwerke = stockwerk => {\n    setShownData(filteredData);\n    let filteredStockwerk;\n\n    if (stockwerk === \"\") {\n      filteredStockwerk = shownData;\n      setFilteredData(filteredStockwerk);\n      if (filters.includes(\"standort\")) filters -= \"stockwerk\";\n      return;\n    } else {\n      filteredStockwerk = filteredData.filter(item => {\n        return item.stockwerk == stockwerk;\n      });\n    }\n\n    filters += \"stockwerk\";\n    setFilteredData(filteredStockwerk);\n  };\n\n  const handleFilterStandorte = standort => {\n    setShownData(filteredData);\n    let filteredStandorte;\n    console.log(standort);\n\n    if (!standort.length) {\n      filteredStandorte = shownData;\n      setFilteredData(filteredStandorte);\n      if (filters.includes(\"standort\")) filters -= \"standort\";\n      return;\n    } else if (standort.length === 2) filteredStandorte = sitzungsZimmer;else {\n      filteredStandorte = filteredData.filter(item => {\n        return item.standortName == standort[0].name;\n      });\n    }\n\n    filters += \"standort\";\n    setFilteredData(filteredStandorte);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      stockwerke: generateStockwerkData(),\n      onStockwerkChange: handleFilterStockwerke,\n      onPersonenChange: handleFilterPersonen,\n      onStandortChange: handleFilterStandorte\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Such-Ausgabe\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"standort-test\",\n        children: filteredData.map(zimmer => {\n          return /*#__PURE__*/_jsxDEV(Zimmer, {\n            zimmername: zimmer.zimmerName,\n            standort: zimmer.standortName,\n            stockwerk: zimmer.stockwerk,\n            maxP: zimmer.maxPersonen\n          }, zimmer.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"1r6SdDgllOPsG2/7xXOd4bHZ7iA=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["C:/Users/afaca/Documents/GitHub/BLJ-Projekt/client/src/components/home.js"],"names":["React","useState","useEffect","axios","Section","Zimmer","port","Home","filteredData","setFilteredData","sitzungsZimmer","setSitzungsZimmer","shownData","setShownData","filters","get","then","response","data","handleFilterPersonen","anzPersonen","filteredPersonen","includes","filter","item","maxPersonen","generateStockwerkData","Set","map","stockwerk","handleFilterStockwerke","filteredStockwerk","handleFilterStandorte","standort","filteredStandorte","console","log","length","standortName","name","zimmer","zimmerName","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Section from \"./section\";\r\nimport Zimmer from \"./requirements/zimmer\";\r\n\r\nconst port = 5001;\r\nconst Home = () => {\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [sitzungsZimmer, setSitzungsZimmer] = useState([]);\r\n  const [shownData, setShownData] = useState([]);\r\n  let filters = [];\r\n\r\n  useEffect(() => {\r\n    axios.get(`http://localhost:${port}/sitzungszimmer/`).then((response) => {\r\n      setSitzungsZimmer(response.data);\r\n      setFilteredData(response.data);\r\n    });\r\n  }, []);\r\n\r\n  const handleFilterPersonen = (anzPersonen) => {\r\n    setShownData(filteredData);\r\n    let filteredPersonen;\r\n    if (!anzPersonen) {\r\n      filteredPersonen = shownData;\r\n      setFilteredData(filteredPersonen);\r\n      if (filters.includes(\"standort\")) filters -= \"person\";\r\n      return;\r\n    } else {\r\n      filteredPersonen = filteredData.filter((item) => {\r\n        return item.maxPersonen >= anzPersonen;\r\n      });\r\n    }\r\n    filters += \"person\";\r\n    setFilteredData(filteredPersonen);\r\n  };\r\n\r\n  const generateStockwerkData = () => {\r\n    return [...new Set(sitzungsZimmer.map((item) => item.stockwerk))];\r\n  };\r\n\r\n  const handleFilterStockwerke = (stockwerk) => {\r\n    setShownData(filteredData);\r\n    let filteredStockwerk;\r\n    if (stockwerk === \"\") {\r\n      filteredStockwerk = shownData;\r\n      setFilteredData(filteredStockwerk);\r\n      if (filters.includes(\"standort\")) filters -= \"stockwerk\";\r\n      return;\r\n    } else {\r\n      filteredStockwerk = filteredData.filter((item) => {\r\n        return item.stockwerk == stockwerk;\r\n      });\r\n    }\r\n    filters += \"stockwerk\";\r\n    setFilteredData(filteredStockwerk);\r\n  };\r\n\r\n  const handleFilterStandorte = (standort) => {\r\n    setShownData(filteredData);\r\n    let filteredStandorte;\r\n    console.log(standort);\r\n    if (!standort.length) {\r\n      filteredStandorte = shownData;\r\n      setFilteredData(filteredStandorte);\r\n      if (filters.includes(\"standort\")) filters -= \"standort\";\r\n      return;\r\n    } else if (standort.length === 2) filteredStandorte = sitzungsZimmer;\r\n    else {\r\n      filteredStandorte = filteredData.filter((item) => {\r\n        return item.standortName == standort[0].name;\r\n      });\r\n    }\r\n    filters += \"standort\";\r\n    setFilteredData(filteredStandorte);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <Section\r\n        stockwerke={generateStockwerkData()}\r\n        onStockwerkChange={handleFilterStockwerke}\r\n        onPersonenChange={handleFilterPersonen}\r\n        onStandortChange={handleFilterStandorte}\r\n      />\r\n      <div className=\"Such-Ausgabe\">\r\n        <div className=\"standort-test\">\r\n          {filteredData.map((zimmer) => {\r\n            return (\r\n              <Zimmer\r\n                key={zimmer.id}\r\n                zimmername={zimmer.zimmerName}\r\n                standort={zimmer.standortName}\r\n                stockwerk={zimmer.stockwerk}\r\n                maxP={zimmer.maxPersonen}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"]},"metadata":{},"sourceType":"module"}